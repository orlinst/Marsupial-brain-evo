<<<<<<< HEAD
geom_cladelabel(217, 'Scandentia', angle=294, hjust = "center", offset.text=13, barsize=3.5, color='darkgreen', offset = 2.5, fontsize = 3)
plot(tree, cex=0.5)
nodelabels(cex=0.5, frame="none")
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=294, hjust = "center", offset.text=13, barsize=3.5, color='darkgreen', offset = 2.5, fontsize = 3)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=40, hjust = "center", offset.text=13, barsize=3.5, color='black', offset = 2.5, fontsize = 3)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=30, hjust = "center", offset.text=13, barsize=3.5, color='black', offset = 2.5, fontsize = 3)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=30, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2)
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=50, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3)
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=50, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=35, hjust = "right", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=35, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=40, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=45, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=35, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=30, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
np <- ggtree(tree, layout="circular") +
geom_hilight(node=176, fill="firebrick2", alpha=.6) +
geom_hilight(node=224, fill="limegreen", alpha=.6) +
geom_hilight(node=198, fill="firebrick2", alpha=.6)
np + geom_cladelabel(176, 'Chiroptera', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(224, 'Haplorhini', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(198, 'Rodentia', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(238, 'Afrotheria', angle=315, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(123, 'Marsupialia', angle=295, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(158, 'Artiodactyla', angle=60, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(143, 'Carnivora', angle=10, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(157, 'Perissodactyla', angle=345, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(138, 'Eulipotyphla', angle=280, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(219, 'Strepsirrhini', angle=40, hjust = "center", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 3) +
geom_cladelabel(237, 'Scandentia', angle=26, hjust = "left", offset.text=13, barsize=1, color='black', offset = 2.5, fontsize = 2.5)
plot(tree)
plot(tree, cex=0.5)
#pdf(file="treeblind.pdf",width=10,height=10)
fancyTree(tree,type="scattergram",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
anc<-fastAnc(tree,dat1,vars=TRUE,CI=TRUE, REML = 1)
anc<-fastAnc(tree,dat1,vars=TRUE,CI=TRUE, REML = 1)
require(phytools)
anc <- fastAnc(tree,dat1, vars=TRUE, CI=TRUE, REML = 1)
tree <-read.tree ("tree.nwk")
setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Vision-loss-evo")
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
dat <- as.data.frame(log(data$VA+1))
row.names(dat)<-row.names(data)
dat$weight <- log(data$X5.1_AdultBodyMass_g)
names(dat) <- c("VA", "W")
dat$relVA <- dat$VA/dat$W
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
row.names(dat)<-row.names(data)
dat <- as.data.frame(data$VA)
row.names(dat)<-row.names(data)
anc <- fastAnc(tree,dat1, vars=TRUE,CI=TRUE, REML = 1)
plot(tree)
root(tree)
is.rooted(tree)
anc <- fastAnc(tree,dat, vars=TRUE,CI=TRUE, REML = 1)
plot(tree)
nodelabels()
anc <- fastAnc (tree,dat, vars=TRUE,CI=TRUE, REML = 1)
row.names(dat)<-row.names(data)
anc <- fastAnc (tree,dat, vars=TRUE,CI=TRUE, REML = 1)
fastAnc
is.ultrametric(tree)
is.rooted(tree)
is.rooted.multiPhylo(tree)
View(dat1)
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
dat <- as.data.frame(data$VA)
row.names(dat)<-row.names(data)
dat$weight <- log(data$X5.1_AdultBodyMass_g)
names(dat) <- c("VA", "W")
dat$relVA <- dat$VA/dat$W
anc <- fastAnc(tree,dat, vars=TRUE,CI=TRUE, REML = 1)
anc <- fastAnc(tree,dat$VA, vars=TRUE,CI=TRUE, REML = 1)
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
anc <- fastAnc(tree,dat$VA, vars=TRUE,CI=TRUE, REML = 1)
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
require(dispRity)
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
dat <- as.data.frame(log(data$VA+1))
row.names(dat)<-row.names(data)
dat$weight <- log(data$X5.1_AdultBodyMass_g)
names(dat) <- c("VA", "W")
dat$relVA <- dat$VA/dat$W
anc <- fastAnc(tree,dat$VA, vars=TRUE,CI=TRUE, REML = 1)
#anc1<-fastAnc(tree,dat$relVA,vars=TRUE,CI=TRUE, REML = 1, na.omit = TRUE)
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
anc <- fastAnc(tree,data$VA, vars=TRUE,CI=TRUE, REML = 1)
#anc1<-fastAnc(tree,dat$relVA,vars=TRUE,CI=TRUE, REML = 1, na.omit = TRUE)
fancyTree(tree,type="scattergram",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree,type="scattergram",X=as.matrix(data$VA),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dat1 <- data$VA
fancyTree(tree,type="scattergram",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dat1 <- as.data.frame(dat1)
fancyTree(tree,type="scattergram",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
row.names(dat1) <- row.names(data)
fancyTree(tree,type="scattergram",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
#pdf(file="treeblind1.pdf",width=10,height=10)
obj1<-contMap(tree,dat1,fsize=c(0.6,1),outline=FALSE)
obj1<-contMap(tree,dat1,fsize=c(0.6,1),outline=FALSE)
View(dat1)
obj1<-contMap(tree,dat1,fsize=c(0.6,1),outline=FALSE)
fancyTree(tree,type="fan",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
??fancyTree
?fancyTree
fancyTree(tree,type="contmap",X=as.matrix(dat1),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dat1 <- data$VA
names(dat1) <- row.names(dat)
#pdf(file="treeblind1.pdf",width=10,height=10)
obj1<-contMap(tree,dat1,fsize=c(0.6,1),outline=FALSE)
plot(obj1,type="fan",legend=0.7*max(nodeHeights(tree)), fsize=c(0.7,0.9))
setwd("./Data/")
require(phytools)
require(ggtree)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
setwd("./Data/")
require(phytools)
require(ggtree)
require(dispRity)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
dat <- as.data.frame(data$VA)
row.names(dat)<-row.names(data)
dat$weight <- log(data$X5.1_AdultBodyMass_g)
names(dat) <- c("VA", "W")
dat$relVA <- dat$VA/dat$W
dat1 <- data$VA
names(dat1) <- row.names(dat)
RR <- RRphylo(tree, dat1)
require(RRphylo)
require(RRphylo)
RR <- RRphylo(tree, dat1)
require(RRphylo)
install.packages(RRphylo)
require(RRphylo)
require(tibble)
install.packages(tibble)
require(RRphylo)
install.packages("C:/Users/uqotodor_local/Downloads/RRphylo_2.0.3.zip", repos = NULL, type = "win.binary")
require(RRphylo)
install.packages(c("bayesplot", "car"))
require(RRphylo)
install.packages(openxlsx)
install.packages("openxlsx")
require(RRphylo)
setwd("./Data/")
require(phytools)
require(ggtree)
require(dispRity)
tree <-read.tree ("tree.nwk")
data <-read.csv ("acuityblind.csv",row.names=1)
clean.data(data,tree)
dat <- as.data.frame(data$VA)
row.names(dat)<-row.names(data)
dat$weight <- log(data$X5.1_AdultBodyMass_g)
names(dat) <- c("VA", "W")
dat$relVA <- dat$VA/dat$W
dat1 <- data$VA
names(dat1) <- row.names(dat)
RR <- RRphylo(tree, dat1)
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 3000, foldername ="Data", cov=dat$W)
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 3000, foldername ="Data")
dat1 <- as.data.frame(dat1)
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, foldername ="Data")
View(dat1)
plot(tree)
dat1
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, foldername ="Data")
RR <- RRphylo(tree, dat1)
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, foldername ="Data")
View(dat1)
dat1
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, f=3 foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, f=3, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, f=3, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 10000, f=1, foldername ="Data")
np <- ggtree(tree, layout="circular") +
geom_hilight(node=192, fill="firebrick2", alpha=.6) +
geom_hilight(node=235, fill="limegreen", alpha=.6) +
geom_hilight(node=215, fill="firebrick2", alpha=.6)
np
search.shift(RR, auto.recognize = "yes", test.single = "yes", status.type= "clade", nrep = 1000, f=2, foldername ="Data")
require(caper)
require(ape)
require(dispRity)
require(geiger)
require(multcomp)
require(phytools)
require(ape)
require(geiger)
require(nlme)
require(evomap)
require(adephylo)
require(phangorn)
# vifs
require(fmsb) # vifs
#plotting
require(ggplot2)
require(RColorBrewer)
data$Order <- as.factor(data$Order)
data <-read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
tree <-read.tree("./Data/tree176.nwk")
rownames(data) <- data$Names
clean.data(data, tree)  ## check if data == tree names
data$Order <- as.factor(data$Order)
data$Family <- as.factor(data$Family)
data$Origin <- as.factor(data$Origin)
data$Status <- as.factor(data$Status)
data$GeoArea <- as.factor(data$GeoArea)
data$Order <- as.factor(data$Order)
data$Family <- as.factor(data$Family)
data$Origin <- as.factor(data$Origin)
data$Status <- as.factor(data$Status)
data$DiurnalityN <- as.factor(data$DiurnalityN)
data$Arboreality <- as.factor(data$Arboreality)
data$Shelter.safety <- as.factor(data$Shelter.safety)
data$Diet <- as.factor(data$Diet)
data$Group.living <- as.factor(data$Group.living)
data$Parental.care <- as.factor(data$Parental.care)
data$Mating.system <- as.factor(data$Mating.system)
data$Torpor <- as.factor(data$Torpor)
data$Play <- as.factor(data$Play)
subsetOZ <- data[data$Origin == "1",]
subsetNG <- data[data$Origin == "2",]
subsetAM<- data[data$Origin == "3",]
=======
output$SD <- NULL
output$`Naive SE` <- NULL
output$`Time-series SE` <- NULL
return(output)
}
## Run the functions and get *results*
all_Sol <- lapply(raw_models_allchains, get.Sol)
all_summaries <- lapply(raw_models_allchains, get.summary.Sol)
results <- lapply(all_summaries, get.stat.Sol)
#setwd("./")
#using list.rbind from rlist
solX <- as.data.frame(list.rbind(all_Sol))
names(solX)
names(solX) <- c("Intercept", "Torpor", "Body Size", "Torpor:Body Size")
#env
# ("Intercept", "Diurnal", "Crepuscular", "Shelter Safety - intermediate", "Shelter Safety - open", "Terrestrial", "Diet - 2", "Diet - 3", "Diet - 4", "Home Range", "Body Size")
#dev
# ("Intercept", "Body Size", "Weaning Age", "Litter Size")
#fmr
# ("Intercept", "FMR", "Body Size", "FMR : Body Size")
#ori
# ("Intercept", "Origin -2", "Origin - 3", "Body Size", "Origin - 2:Body Size", "Origin - 3:Body Size")
#play
# ("Intercept", "Play -2", "Play - 3", "Body Size", "Play - 2:Body Size", "Play - 3:Body Size")
#soc
# ("Intercept", "Group Living", "Parental Care", "Mating System", "Population Density", "Body Size")
#tor
# ("Intercept", "Torpor", "Body Size", "Torpor:Body Size")
#vul
# ("Intercept", "Status - 2", "Status - 3", "Body Size", "Status - 2:Body Size", "Status - 3:Body Size" )
#soc2
#("Intercept", "Population density",  "Home Range", "Body Size")
#soc3
#("Intercept",    "Parental Care", "Mating System", "Body Size")
#plot in pdf
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
#dens.plot <- plot()
for(column in 1 : c(ncol(solX))) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column],  main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"), prob = c(50, 95, 99))
abline(v = 0, lty = 1)
}
dev.off()
#beta_density <- density(solX$FMR.Riek)
#plot(beta_density)
#abline(v = 0, lty = 2)
#percentage_above_zero <- length(which(solX$FMR.Riek >= 0))/length(solX$FMR.Riek)
#percentage_above_zero
# Using the posteriors collated in *results*
mbar <-  function (x, col=1) { # function to calculate average parameter estimates and average variances from the results list
vals <- rowMeans(matrix(unlist(lapply(x, function (z) z[, col])),
nrow=dim(x[[1]])[1], ncol=length(x)))
names(vals) <- rownames(x[[1]])
vals
}
Bm <- function (x) {
Qmbar <- mbar(x)
Qvals <- matrix(unlist(lapply(x, function (z) z[,1])),
ncol=length(x), nrow=dim(x[[1]])[1])
QQ <- apply(Qvals, 2, function (x) x - Qmbar)
apply(QQ, 1, function (z) (z %*% z)/(length(z)-1))
}
Tm <- function (x) {
Umbar <- mbar(x,  col=2)
Umbar + (1 + 1/length(x)) * Bm(x)
}
lambda <- function (nu) {
(nu + 1)/(nu + 3)
}
vm <- function (Bm, Tm, m=5){
gammahat <- (1+1/m) * sum(Bm/Tm)/length(Bm)
(m-1)/(gammahat^2)
}
# Now we do the analysis:
#m - imputed sets * chains
#n - number of species
#k - number of params as N of cols in solutions
m <- (length(imp$imp[[1]]))*2
n <- 176
k <- ncol(solX)
## m = number of imputed datasets
## n = number of observations
## k = number of parameters
Bm1 <- Bm(results)
Tm1 <- Tm(results) # total variance
# calculation of the degrees of freedom for t-tests of parameters
vhatobs <- lambda(n-k)*(n-k)*(1- (1+1/m) * sum(Bm1/Tm1)/length(Bm1))
vm1 <- vm(Bm1, Tm1)
vmtilde <-  1/(1/vm1+1/vhatobs)
Qmbar <- mbar(results) # mean parameter estimates
WaldT <- Qmbar/sqrt(Tm1)
upperCI <- Qmbar + sqrt(Tm1) * qt(.95, vmtilde)
lowerCI <-  Qmbar - sqrt(Tm1) * qt(.95, vmtilde)
tTable <- cbind(Qmbar, SE=sqrt(Tm1), WaldT,
df=vmtilde, p=2*(1-pt(abs(WaldT),
vmtilde)), lowerCI, upperCI)
#Getting DICs and averaging (possibly other ICs)
get.DIC <- function(model) {return(model$DIC)}
model_DICs <- lapply(raw_models_allchains, get.DIC)
model_DICs <- as.data.frame(model_DICs)
DICnames <- c(paste0("Model", 1:ncol(model_DICs)))
colnames(model_DICs) <- DICnames
DICs <- mean(t(model_DICs))
DICs
#Calculating average H for all models
get.H <- function(model) {return((var(model$VCV[,"animal"]))/
+     (var(model$VCV[,"animal"]) + var(model$VCV[,"units"])))
}
Hs <- lapply(raw_models_allchains, get.H)
Hs <- as.data.frame(Hs)
mean(t(Hs))
#Change row names
row.names(tTable)
row.names(tTable) <- names(solX)
#Export a csv table
#col.names = NA offsets the header with 1
write.table(as.matrix(tTable), "./MCMCmodels/analysis-output.csv", sep = ",", col.names = NA, row.names = TRUE)
#Export txt with posteriors and Hs and DICs
sink('./MCMCmodels/analysis-output.txt')
#options(width=10000) stops word wrapping
options(width=10000)
#print pooled results
tTable
#print Hs
print("Mean H")
mean(t(Hs))
#print DICs
print("Mean DIC")
DICs
sink()
#Convert data to res.plot
res.plot <- as.data.frame(tTable)
#res.plot$upperCI <- NULL
#res.plot$lowerCI <- NULL
res.plot$p <- NULL
res.plot$df <- NULL
res.plot$WaldT <- NULL
#generate pdf with the model
pdf(file="./MCMCmodels/model.pdf",width=6,height=4)
p <- ggplot(
res.plot,
aes(x = Qmbar, y = fct_relevel(row.names(res.plot), "Body Size", "Intercept", after = Inf), xmin = lowerCI, xmax = upperCI)) +
geom_point(aes(color = row.names(res.plot))) +
geom_errorbarh(aes(color = row.names(res.plot)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model parameters"
p$labels$x <- "Posterior estimate + 95% CI"
p$labels$y <- "Model parameters"
p
#fct_relevel(row.names(res.plot), "Body Size", "Intercept", after = Inf)
#generates bayesplot of the model
color_scheme_set("brightblue")
mcmc_intervals(t(res.plot))
dev.off()
#optional
mcmc_areas(t(res.plot))
#Set WD to the model of interest
#Load imp if not loaded, as it is used for the count of the number of imputed sets
#setwd("./MCMCmodels")
#Reading all models + all chains (if more chains are run, add manually here)
#setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Marsupial-brain-evo/MCMCmodels/model_dev")
setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Marsupial-brain-evo/MCMCmodels/model_vul")
list() -> raw_models_chain1 -> raw_models_chain2
for(imputedsets in 1:  length(imp$imp[[1]])) {
raw_models_chain1[[imputedsets]] <- read.mulTree(paste0("model",imputedsets,"-tree1_chain1"), model = TRUE)
raw_models_chain2[[imputedsets]] <- read.mulTree(paste0("model",imputedsets,"-tree1_chain2"), model = TRUE)
}
raw_models_allchains <- c(raw_models_chain1, raw_models_chain2)
## Get Sol
# @param model this should be a single model (e.g. one chain output from mcmcglmm)
# @return the Sol vector from one single chain
get.Sol <- function(model) {return(model$Sol)}
## Get summary of Sol
# @param model this should be a single model (e.g. one chain output from mcmcglmm)
# @return the summary table of the Sol
get.summary.Sol <- function(model) {return(summary(model$Sol))}
## Turn into dataframe and get statistics
## obtain Variance (SD^2) and bind to the list
## remove unnecessary columns
# @param The output of get.summary.Sol (the summary of Sol)
# @return dataframe with statistics
get.stat.Sol <- function(summarySol) {
output <- as.data.frame(summarySol$statistics)
output$Var <- (output$SD)^2
output$SD <- NULL
output$`Naive SE` <- NULL
output$`Time-series SE` <- NULL
return(output)
}
## Run the functions and get *results*
all_Sol <- lapply(raw_models_allchains, get.Sol)
all_summaries <- lapply(raw_models_allchains, get.summary.Sol)
results <- lapply(all_summaries, get.stat.Sol)
#setwd("./")
names(solX)
names(solX) <- c("Intercept", "Status - 2", "Status - 3", "Body Size", "Status - 2:Body Size", "Status - 3:Body Size" )
#using list.rbind from rlist
solX <- as.data.frame(list.rbind(all_Sol))
names(solX)
names(solX) <- c("Intercept", "Status - 2", "Status - 3", "Body Size", "Status - 2:Body Size", "Status - 3:Body Size" )
#env
# ("Intercept", "Diurnal", "Crepuscular", "Shelter Safety - intermediate", "Shelter Safety - open", "Terrestrial", "Diet - 2", "Diet - 3", "Diet - 4", "Home Range", "Body Size")
#dev
# ("Intercept", "Body Size", "Weaning Age", "Litter Size")
#fmr
# ("Intercept", "FMR", "Body Size", "FMR : Body Size")
#ori
# ("Intercept", "Origin -2", "Origin - 3", "Body Size", "Origin - 2:Body Size", "Origin - 3:Body Size")
#play
# ("Intercept", "Play -2", "Play - 3", "Body Size", "Play - 2:Body Size", "Play - 3:Body Size")
#soc
# ("Intercept", "Group Living", "Parental Care", "Mating System", "Population Density", "Body Size")
#tor
# ("Intercept", "Torpor", "Body Size", "Torpor:Body Size")
#vul
# ("Intercept", "Status - 2", "Status - 3", "Body Size", "Status - 2:Body Size", "Status - 3:Body Size" )
#soc2
#("Intercept", "Population density",  "Home Range", "Body Size")
#soc3
#("Intercept",    "Parental Care", "Mating System", "Body Size")
#plot in pdf
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
#dens.plot <- plot()
for(column in 1 : c(ncol(solX))) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column],  main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"), prob = c(50, 95, 99))
abline(v = 0, lty = 1)
}
dev.off()
#beta_density <- density(solX$FMR.Riek)
#plot(beta_density)
#abline(v = 0, lty = 2)
#percentage_above_zero <- length(which(solX$FMR.Riek >= 0))/length(solX$FMR.Riek)
#percentage_above_zero
# Using the posteriors collated in *results*
mbar <-  function (x, col=1) { # function to calculate average parameter estimates and average variances from the results list
vals <- rowMeans(matrix(unlist(lapply(x, function (z) z[, col])),
nrow=dim(x[[1]])[1], ncol=length(x)))
names(vals) <- rownames(x[[1]])
vals
}
Bm <- function (x) {
Qmbar <- mbar(x)
Qvals <- matrix(unlist(lapply(x, function (z) z[,1])),
ncol=length(x), nrow=dim(x[[1]])[1])
QQ <- apply(Qvals, 2, function (x) x - Qmbar)
apply(QQ, 1, function (z) (z %*% z)/(length(z)-1))
}
Tm <- function (x) {
Umbar <- mbar(x,  col=2)
Umbar + (1 + 1/length(x)) * Bm(x)
}
lambda <- function (nu) {
(nu + 1)/(nu + 3)
}
vm <- function (Bm, Tm, m=5){
gammahat <- (1+1/m) * sum(Bm/Tm)/length(Bm)
(m-1)/(gammahat^2)
}
# Now we do the analysis:
#m - imputed sets * chains
#n - number of species
#k - number of params as N of cols in solutions
m <- (length(imp$imp[[1]]))*2
n <- 176
k <- ncol(solX)
## m = number of imputed datasets
## n = number of observations
## k = number of parameters
Bm1 <- Bm(results)
Tm1 <- Tm(results) # total variance
# calculation of the degrees of freedom for t-tests of parameters
vhatobs <- lambda(n-k)*(n-k)*(1- (1+1/m) * sum(Bm1/Tm1)/length(Bm1))
vm1 <- vm(Bm1, Tm1)
vmtilde <-  1/(1/vm1+1/vhatobs)
Qmbar <- mbar(results) # mean parameter estimates
WaldT <- Qmbar/sqrt(Tm1)
upperCI <- Qmbar + sqrt(Tm1) * qt(.95, vmtilde)
lowerCI <-  Qmbar - sqrt(Tm1) * qt(.95, vmtilde)
tTable <- cbind(Qmbar, SE=sqrt(Tm1), WaldT,
df=vmtilde, p=2*(1-pt(abs(WaldT),
vmtilde)), lowerCI, upperCI)
#Getting DICs and averaging (possibly other ICs)
get.DIC <- function(model) {return(model$DIC)}
model_DICs <- lapply(raw_models_allchains, get.DIC)
model_DICs <- as.data.frame(model_DICs)
DICnames <- c(paste0("Model", 1:ncol(model_DICs)))
colnames(model_DICs) <- DICnames
DICs <- mean(t(model_DICs))
DICs
#Calculating average H for all models
get.H <- function(model) {return((var(model$VCV[,"animal"]))/
+     (var(model$VCV[,"animal"]) + var(model$VCV[,"units"])))
}
Hs <- lapply(raw_models_allchains, get.H)
Hs <- as.data.frame(Hs)
mean(t(Hs))
#Change row names
row.names(tTable)
row.names(tTable) <- names(solX)
#Export a csv table
#col.names = NA offsets the header with 1
write.table(as.matrix(tTable), "./MCMCmodels/analysis-output.csv", sep = ",", col.names = NA, row.names = TRUE)
#Export txt with posteriors and Hs and DICs
sink('./MCMCmodels/analysis-output.txt')
#options(width=10000) stops word wrapping
options(width=10000)
#print pooled results
tTable
#print Hs
print("Mean H")
mean(t(Hs))
#print DICs
print("Mean DIC")
DICs
sink()
#Convert data to res.plot
res.plot <- as.data.frame(tTable)
#res.plot$upperCI <- NULL
#res.plot$lowerCI <- NULL
res.plot$p <- NULL
res.plot$df <- NULL
res.plot$WaldT <- NULL
#generate pdf with the model
pdf(file="./MCMCmodels/model.pdf",width=6,height=4)
p <- ggplot(
res.plot,
aes(x = Qmbar, y = fct_relevel(row.names(res.plot), "Body Size", "Intercept", after = Inf), xmin = lowerCI, xmax = upperCI)) +
geom_point(aes(color = row.names(res.plot))) +
geom_errorbarh(aes(color = row.names(res.plot)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model parameters"
p$labels$x <- "Posterior estimate + 95% CI"
p$labels$y <- "Model parameters"
p
#fct_relevel(row.names(res.plot), "Body Size", "Intercept", after = Inf)
#generates bayesplot of the model
color_scheme_set("brightblue")
mcmc_intervals(t(res.plot))
dev.off()
#optional
mcmc_areas(t(res.plot))
require(rethinking)
#Loading data, imputed datasets file and tree
data <-read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
precis(data)
precis(data)
precis( data )
precis( data )
precis( data )
precis( data )
require(MCMCglmm)
version
require(caper)
require(ape)
require(dispRity)
require(geiger)
require(multcomp)
require(phytools)
require(ape)
require(geiger)
require(nlme)
require(evomap)
require(adephylo)
require(phangorn)
# vifs
require(fmsb) # vifs
#plotting
require(ggplot2)
require(RColorBrewer)
data <-read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
tree <-read.tree("./Data/tree176.nwk")
rownames(data) <- data$Names
clean.data(data, tree)  ## check if data == tree names
require(geiger)
require(multcomp)
require(phytools)
require(ape)
require(geiger)
require(nlme)
require(evomap)
require(adephylo)
require(phangorn)
install.packages(c("dispRity", "phangorn", "geiger", "adephylo"))
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
require(caper)
require(ape)
require(dispRity)
require(geiger)
require(multcomp)
require(phytools)
require(ape)
require(geiger)
require(nlme)
<<<<<<< HEAD
require(evomap)
=======
#require(evomap)
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
require(adephylo)
require(phangorn)
# vifs
require(fmsb) # vifs
#plotting
require(ggplot2)
require(RColorBrewer)
<<<<<<< HEAD
mars <- comparative.data(phy = tree, data = data, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
mars1 <- comparative.data(phy = tree, data = subsetAM, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsNG <- comparative.data(phy = tree, data = subsetNG, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsOZ <- comparative.data(phy = tree, data = subsetOZ, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsAM <- comparative.data(phy = tree, data = subsetAM, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
View(marsAM)
marsAM <- as.data.frame(marsAM)
rm(mars1)
rm(marsAM)
marsAM <- comparative.data(phy = tree, data = subsetAM, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res.all <- pgls(log(Brain) ~ log(BodyN), data = mars, lambda='ML')
model.pgls.res.AM <- pgls(log(Brain) ~ log(BodyN), data = marsAM, lambda='ML')
model.pgls.res.NG <- pgls(log(Brain) ~ log(BodyN), data = marsNG, lambda='ML')
model.pgls.res.OZ <- pgls(log(Brain) ~ log(BodyN), data = marsOZ, lambda='ML')
res<-residuals(model.pgls.res)
res<-residuals(model.pgls.res.all)
data <- cbind (data, res)
mars <- comparative.data(phy = tree, data = data, names.col = Names,
+                          vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
mars <- comparative.data(phy = tree, data = data, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsNG <- comparative.data(phy = tree, data = subsetNG, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
=======
data <-read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
tree <-read.tree("./Data/tree176.nwk")
rownames(data) <- data$Names
clean.data(data, tree)  ## check if data == tree names
data <-read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
tree <-read.tree("./Data/tree176.nwk")
rownames(data) <- data$Names
clean.data(data, tree)  ## check if data == tree names
data$Order <- as.factor(data$Order)
data$Family <- as.factor(data$Family)
data$Origin <- as.factor(data$Origin)
data$Status <- as.factor(data$Status)
data$DiurnalityN <- as.factor(data$DiurnalityN)
data$Arboreality <- as.factor(data$Arboreality)
data$Shelter.safety <- as.factor(data$Shelter.safety)
data$Diet <- as.factor(data$Diet)
data$Group.living <- as.factor(data$Group.living)
data$Parental.care <- as.factor(data$Parental.care)
data$Mating.system <- as.factor(data$Mating.system)
data$Torpor <- as.factor(data$Torpor)
data$Play <- as.factor(data$Play)
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
subsetOZ <- data[data$Origin == "1",]
subsetNG <- data[data$Origin == "2",]
subsetAM<- data[data$Origin == "3",]
require(caper)
require(ape)
require(dispRity)
require(geiger)
require(multcomp)
require(phytools)
require(ape)
require(geiger)
require(nlme)
<<<<<<< HEAD
require(evomap)
=======
#require(evomap)
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
require(adephylo)
require(phangorn)
# vifs
require(fmsb) # vifs
#plotting
require(ggplot2)
require(RColorBrewer)
<<<<<<< HEAD
=======
#Create comparative object for ape
mars <- comparative.data(phy = tree, data = data, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
####
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
marsOZ <- comparative.data(phy = tree, data = subsetOZ, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsNG <- comparative.data(phy = tree, data = subsetNG, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsAM <- comparative.data(phy = tree, data = subsetAM, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
<<<<<<< HEAD
data1 <- as.data.frame(data$res)
rownames(data1) <- data$Names
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrun=5000, f=10, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Marsupial-brain-evo")
data1 <- as.data.frame(subsetAM$res)
rownames(data1) <- subsetAM$Names
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=5, foldername ="Data")
data1 <- as.data.frame(data$res)
rownames(data1) <- data$Names
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =8000, f=5, foldername ="Data")
clean.data(data, tree)
data1 <- as.data.frame(subsetAM$res)
rownames(data1) <- subsetAM$Names
clean.data(data1, tree)
treeAM <- clean.data(data1, tree)
plot(treeAM)
plot(treeAM$tree)
treeAM <- treeAM$tree
RR <- RRphylo(treeAM, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =10000, f=5, foldername ="Data")
data1 <- as.data.frame(subsetNG$res)
rownames(data1) <- subsetNG$Names
treeNG <- clean.data(data1, tree)
treeNG <- treeNG$tree
RR <- RRphylo(tree, data1)
RR <- RRphylo(treeNG, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =10000, f=5, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =10000, f=3, foldername ="Data")
data1 <- as.data.frame(subsetOZ$res)
rownames(data1) <- subsetOZ$Names
treeOZ <- clean.data(data1, tree)
treeOZ <- treeOZ$tree
RR <- RRphylo(treeOZ, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =10000, f=3, foldername ="Data")
=======
#####
#Allometric slope for residuals
#Slope 0.57
model.pgls.res <- pgls(log(Brain) ~ log(BodyN), data = mars, lambda='ML')
summary(model.pgls.res)
#Obtain kappa so to infer the model of evolution
mars_3d <- comparative.data(phy = tree, data = data, names.col = Names, vcv.dim=3, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.kappa <- pgls(log(Brain) ~ log(BodyN), data = mars_3d, kappa ="ML")
summary (model.pgls.kappa)
#look at the kappa plot
profile_kappa=pgls.profile(model.pgls.kappa, which="kappa")
plot(profile_kappa)
#kappa is estimated around 0.8 (if fixing lambda to 0.91) thus it is close to brownian motion
#load up comp data with the phylogenetic residuals
res<-residuals(model.pgls.res) #phylo=T exports phylo corrected residuals
res<- res/sqrt(var(res))[1] #standartize residuals
#plot and observe that there are no outlies with res>3
par(mfrow=c(2,2))
plot(model.pgls.res)
#binding residuals to the main dataset
data <- cbind (data, res)
mars <- comparative.data(phy = tree, data = data, names.col = Names, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
X <- "Brain"
Y <- "BodyN"
FR <- "Origin"
dat <-data[,c(which(colnames(data)==Y),which(colnames(data)==X), which(colnames(data)==FR) ),drop=F]
colnames(dat)<-c("Dependent","Independent", "Factor" )
dat$Dependent <- as.numeric (dat$Dependent)
dat$Independent <- as.numeric (dat$Independent)
dat$Factor <- as.factor (dat$Factor)
#create custom scale
myColors <- brewer.pal(4,"Set1") # Pal value must be the same as factor levels
names(myColors) <- levels(dat$Factor)
colScale <- scale_colour_manual(name = "Origin",values = myColors, labels=c("Australia", "NG", "Americas"))
#Plot regression
p <- ggplot(dat, aes(log(Dependent), log(Independent), colour = Factor)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
p1 <- p + colScale + labs(tag = '', title="Origin model", subtitle = 'NG and American Marsupials have larger relative brains', caption ='t=2.9, p=0.003, df=172', x ="Body Size", y = "Brain Size", fill = "Origin")
p1
## manually adjust the slope and intercept from the pgls
p <- ggplot(dat, aes(log(Dependent), log(Independent))) +
geom_point() +
scale_y_continuous(limits=c(-3, 5)) +
scale_x_continuous(limits=c(0, 12)) #+ geom_smooth(method = "lm", se = FALSE#)
p1 <- p + geom_abline(intercept = -2.17, slope = 0.574, color="blue", size=1) +
labs(
tag = '',
title="Brain - Body Allometry",
subtitle = expression(paste('Brain size = -2.17 + Body mass'^'0.57')),
caption = expression(paste('R'^'2'*' = 0.9, F'['(1, 174)'] * ' = 1581, p < 0.0001')),
x ="Body Size", y = "Brain Size")
p1
# mention it carefully
# mean(abs(res1))
# [1] 0.5541467 --> residuals mammals no marsupials (Isler)
# mean(abs(res))
# [1] 0.2408462 --> residuals my datatset
>>>>>>> 62c1e0951de6268d7ab414f7d99326683f9596ab
