p
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top")
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) + theme_classic() +
theme(legend.position="top")
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
theme_classic() +
scale_fill_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas"))
p1
p1 + scale_fill_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas"))
p1 + scale_fill_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas"))
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
scale_fill_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
scale_fill_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
theme_classic()
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
scale_fill_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
p``
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
scale_fill_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
geom_point()
p``
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
scale_shape_manual(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas"))
theme(legend.position="top") +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(Brain, BodyN, color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
View(data)
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(Brain, BodyN, color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
mars <- comparative.data(phy = tree, data = data, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls <- pgls(log(Brain) ~ log(BodyN) * Origin, data = mars, lambda='ML')
model.pgls
summary(model.pgls)
anova(model.pgls)
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_abline(aes(intercept=-2.37, slope = 0.58, fill='Comparison Line 1'), show.legend = TRUE)
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
pq
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_abline(aes(intercept=-2.37, slope = 0.58, fill='Comparison Line 1'), show.legend = TRUE)
geom_abline(aes(intercept=-2.37 - 0.03, slope = 0.58 + 0.31, fill='Comparison Line 1'), show.legend = TRUE)
geom_abline(aes(intercept=-2.37 - 0.05, slope = 0.58 + 0.4, fill='Comparison Line 1'), show.legend = TRUE)
P1
p1
p1 <- ggplot() +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
geom_abline(aes(intercept=-2.37, slope = 0.58, fill='Comparison Line 1'), show.legend = TRUE)
geom_abline(aes(intercept=-2.37 - 0.03, slope = 0.58 + 0.31, fill='Comparison Line 1'), show.legend = TRUE)
geom_abline(aes(intercept=-2.37 - 0.05, slope = 0.58 + 0.4, fill='Comparison Line 1'), show.legend = TRUE)
p1
p1 <- ggplot() +
theme_bw() +
geom_point() +
geom_smooth(method = 'lm', se=FALSE) +
geom_abline(aes(intercept=-2.37, slope = 0.58, fill='Comparison Line 1'), show.legend = TRUE) +
geom_abline(aes(intercept=-2.37 - 0.03, slope = 0.58 + 0.31, fill='Comparison Line 1'), show.legend = TRUE) +
geom_abline(aes(intercept=-2.37 - 0.05, slope = 0.58 + 0.4, fill='Comparison Line 1'), show.legend = TRUE)
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin))+
theme_bw() +
geom_point() +
geom_smooth(method = 'lm', se=FALSE) +
geom_abline(aes(intercept=-2.37, slope = 0.58, fill='Comparison Line 1'), show.legend = TRUE) +
geom_abline(aes(intercept=-2.37 - 0.03, slope = 0.58 + 0.31, fill='Comparison Line 1'), show.legend = TRUE) +
geom_abline(aes(intercept=-2.37 - 0.05, slope = 0.58 + 0.4, fill='Comparison Line 1'), show.legend = TRUE)
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(log(Brain), log(BodyN), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
View(data)
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic()
p1
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic() +
xlab("log Body weight  ))") + ylab("log Brain volume")
p1
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p1
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Status, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p1
data$Status[data$Status == 3] <- 2
p2 <- ggplot(data, aes(log(BodyN), log(Brain), color=Status, shape=Status)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Status", labels = c("Common", "Vulnerable")) +
scale_shape_discrete(name = "Status", labels = c("COmmon", "Vulnerable")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p2
p2 <- ggplot(data, aes(log(BodyN), log(Brain), color=Status, shape=Status)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Status", labels = c("Common", "Vulnerable")) +
scale_shape_discrete(name = "Status", labels = c("COmmon", "Vulnerable")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p2
p1 <- ggplot(data, aes(log(BodyN), log(Brain), color=Origin, shape=Origin)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
scale_shape_discrete(name = "Origin", labels = c("Australia", "New Guinea", "Americas")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p1
p2 <- ggplot(data, aes(log(BodyN), log(Brain), color=Status, shape=Status)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Status", labels = c("Common", "Vulnerable")) +
scale_shape_discrete(name = "Status", labels = c("Common", "Vulnerable")) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p2
p2 <- ggplot(data, aes(log(BodyN), log(Brain), color=Status, shape=Status)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
theme(legend.position="top") +
scale_colour_discrete(name = "Status", labels = c("Common", "Vulnerable"), na.translate = F) +
scale_shape_discrete(name = "Status", labels = c("Common", "Vulnerable"), na.translate = F) +
theme_classic() +
xlab("log Body weight") + ylab("log Brain volume")
p2
install.packages("plotly")
require(plotly)
plot_ly(x=data$BodyN, y=data$Brain, z=data$Litter.size, type="scatter3d", mode="markers", color=data$Origin)
plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=data$Origin)
plot_ly(x=data$BodyN, y=data$Brain, z=data$Litter.size, type="scatter3d", mode="markers", color=data$Origin, title="Brain vs Body vs Litter size vs Origin"))
plot_ly(x=data$BodyN, y=data$Brain, z=data$Litter.size, type="scatter3d", mode="markers", color=data$Origin, title="Brain vs Body vs Litter size vs Origin")
fig <- plot_ly(x=data$BodyN, y=data$Brain, z=data$Litter.size, type="scatter3d", mode="markers", color=data$Origin)
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=data$Origin)
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="lines+markers", color=data$Origin)
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, colors = "Set1")
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, colors = "Set1")
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=data$Origin, colors = "Set1")
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
pal <- c("red", "blue", "green")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, colors = pal)
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
dev.off()
fig
pal <- c("red", "blue", "green")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin)
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
pal <- c("red", "blue", "green")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, colors = pal, marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, colors = pal, symbol = ~Species, symbols = c('circle','x','o') marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
pal <- c("red", "blue", "green")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, symbol = ~data$Species, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
pal <- c("red", "blue", "green")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
~data$Origin
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Litter.size, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$BodyN, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Brain, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
fig
dev.off(
dev.off()
dev.off()
dev.off()
fig
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
brainsize <-setNames(data$Brain,
rownames(data))
bodysize <-setNames(data$BodyN,
rownames(data))
bl.object<-edge.widthMap(tree,brainsize)
plot(bl.object,fsize=0.9,max.width=0.8,
legend="Brain size",
color=palette()[4],min.width=0.05,border="black",
lwd=3)
#OR mirrored for 2 traits
plot(edge.widthMap(tree,brainsize),color=palette()[2],
lwd=4,direction="rightwards",max.width=0.8,
ftype="off",legend="Brain",border="black")
plot(edge.widthMap(tree,bodysize),color=palette()[4],
lwd=4,direction="leftwards",max.width=0.8,
ftype="off",legend="Body",border="black")
bl.object<-edge.widthMap(tree,brainsize)
plot(bl.object,fsize=0.9,max.width=0.8,
legend="Brain size",
color=palette()[4],min.width=0.05,border="black",
lwd=3)
plot(edge.widthMap(tree,brainsize),color=palette()[2],
lwd=4,direction="rightwards",max.width=0.8,
ftype="off",legend="Brain",border="black")
plot(edge.widthMap(tree,bodysize),color=palette()[4],
lwd=4,direction="leftwards",max.width=0.8,
ftype="off",legend="Body",border="black")
fig <- plot_ly(x=log(data$BodyN), y=log(data$Brain), z=log(data$Litter.size), type="scatter3d", mode="markers", color=~data$Origin, symbol = ~data$Origin, symbols = c('circle','x','o'), marker = list(size = 10))
fig <- fig %>% layout(
title="Brain vs Body vs Litter size vs Origin",
scene = list(
xaxis = list(title = "Body"),
yaxis = list(title = "Brain"),
zaxis = list(title = "Litter Size"),
color = list(title = "Origin")
))
fig
