colnames(dat)<-c("Dependent","Independent", "Factor" )
dat$Dependent <- as.numeric (dat$Dependent)
dat$Independent <- as.numeric (dat$Independent)
dat$Factor <- as.factor (dat$Factor)
#create custom scale
myColors <- brewer.pal(4,"Set1") # Pal value must be the same as factor levels
names(myColors) <- levels(dat$Factor)
colScale <- scale_colour_manual(name = "Origin",values = myColors, labels=c("Australia", "NG", "Americas"))
#Plot regression
p <- ggplot(dat, aes(log(Dependent), log(Independent), colour = Factor)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
p1 <- p + colScale + labs(tag = '', title="Origin model", subtitle = 'NG and American Marsupials have larger relative brains', caption ='t=2.9, p=0.003, df=172', x ="Body Size", y = "Brain Size", fill = "Origin")
p1
p1
p <- ggplot(dat, aes(log(Dependent), log(Independent))) +
geom_point() +
scale_y_continuous(limits=c(-3, 5)) +
scale_x_continuous(limits=c(0, 12)) #+ geom_smooth(method = "lm", se = FALSE#)
p1 <- p + geom_abline(intercept = -2.17, slope = 0.574, color="blue", size=1) +
labs(
tag = '',
title="Brain - Body Allometry",
subtitle = expression(paste('Brain size = -2.17 + Body mass'^'0.57')),
caption = expression(paste('R'^'2'*' = 0.9, F'['(1, 174)'] * ' = 1581, p < 0.0001')),
x ="Body Size", y = "Brain Size")
p1
p1
#Origin model - Sig interaction
model.pgls4<-pgls(log(Brain) ~ log(BodyN)  * Origin, data = mars, lambda='ML')
summary(model.pgls4)
anova(model.pgls4)
model.pgls4<-pgls(log(Brain) ~ log(BodyN)  + Origin, data = mars, lambda='ML')
model.pgls4<-pgls(log(Brain) ~ log(BodyN)  * Origin, data = mars, lambda='ML')
summary(model.pgls4)
anova(model.pgls4)
p <- ggplot(dat, aes(log(Dependent), log(Independent), colour = Factor)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
p1 <- p + colScale + labs(tag = '', title="Origin model", subtitle = 'NG and American Marsupials have larger relative brains', caption ='t=2.9, p=0.003, df=172', x ="Body Size", y = "Brain Size", fill = "Origin")
p1
p1
data <- read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
data <- read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
tree <-read.tree("./Data/tree176.nwk")
data <- read.csv("./Data/marsALL.txt", sep = "\t", header = TRUE)
View(data)
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetDi <- data[data$Order == "Diprotodontia",]
treeDa <- clean.data(subsetDa, tree)
treeDa <- treeDa$tree
treeDi <- clean.data(subsetDi, tree)
treeDi <- treeDi$tree
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetDi <- data[data$Order == "Diprotodontia",]
treeDa <- clean.data(subsetDa, tree)
treeDa <- treeDa$tree
treeDi <- clean.data(subsetDi, tree)
treeDi <- treeDi$tree
marsDi <- comparative.data(phy = tree, data = subsetDi, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsDa <- comparative.data(phy = tree, data = subsetDa, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res.Di <- pgls(log(Brain) ~ log(BodyN), data = marsDi, lambda='ML')
model.pgls.res.Da <- pgls(log(Brain) ~ log(BodyN), data = marsDa, lambda='ML')
data
data$Order
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetDi <- data[data$Order == "Diprotodontia",]
treeDa <- clean.data(subsetDa, tree)
treeDa <- treeDa$tree
treeDi <- clean.data(subsetDi, tree)
treeDi <- treeDi$tree
marsDi <- comparative.data(phy = tree, data = subsetDi, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsDa <- comparative.data(phy = tree, data = subsetDa, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
mmarsDa
marsDa
plot(treeDa)
plot(marsDa$dropped)
marsDa$dropped
subsetDa
tree
plot(tree)
treeDa <- clean.data(subsetDa, tree)
treeDa <- treeDa$tree
plot(treeDa)
####
marsOZ <- comparative.data(phy = tree, data = subsetOZ, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res.OZ <- pgls(log(Brain) ~ log(BodyN), data = marsOZ, lambda='ML')
View(subsetDa)
View(subsetAM)
View(subsetDa)
marsDi <- comparative.data(phy = treeDi, data = subsetDi, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsDa <- comparative.data(phy = treeDa, data = subsetDa, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res.Di <- pgls(log(Brain) ~ log(BodyN), data = marsDi, lambda='ML')
model.pgls.res.Da <- pgls(log(Brain) ~ log(BodyN), data = marsDa, lambda='ML')
summary(model.pgls.res.Di)
summary(model.pgls.res.Da)
anova(model.pgls.res.Da, model.pgls.res.Di)
model.pgls.res12 <- pgls(res ~ Origin, data = mars, lambda='ML')
summary(data.pgls.res12)
summary(data.pgls.res12)
summary(model.pgls.res12)
model.pgls.res12 <- pgls(res ~ Order, data = mars, lambda='ML')
summary(model.pgls.res12)
model.pgls.res12 <- pgls(log(Brain) ~ log(BodyN)*Order, data = mars, lambda='ML')
model.pgls.res12 <- pgls(log(Brain) ~ log(BodyN)+Order, data = mars, lambda='ML')
summary(model.pgls.res12)
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetDi <- data[data$Order == "Diprotodontia",]
treeDa <- clean.data(subsetDa, tree)
treeDa <- treeDa$tree
treeDi <- clean.data(subsetDi, tree)
treeDi <- treeDi$tree
marsDi <- comparative.data(phy = treeDi, data = subsetDi, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
marsDa <- comparative.data(phy = treeDa, data = subsetDa, names.col = Names,
vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res.Di <- pgls(log(Brain) ~ log(BodyN), data = marsDi, lambda='ML')
model.pgls.res.Da <- pgls(log(Brain) ~ log(BodyN), data = marsDa, lambda='ML')
data1 <- as.data.frame(model.pgls.res.Da$residuals)
rownames(data1) <- subsetDa$Names
tree <- treeDa
RR <- RRphylo(tree, data1)
require(RRphylo)
RR <- RRphylo(tree, data1)
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
setwd("D:/Dropbox/05. Github/Marsupial-brain-evo")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
data1 <- as.data.frame(model.pgls.res.Da$residuals)
rownames(data1) <- subsetDa$Names
tree <- treeDa
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=5, foldername ="Data")
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=10, foldername ="Data")
data1 <- as.data.frame(model.pgls.res.Da$residuals)
rownames(data1) <- subsetDa$Names
tree <- treeDa
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=5, foldername ="Data")
data1 <- as.data.frame(model.pgls.res.Di$residuals)
rownames(data1) <- subsetDi$Names
tree <- treeDi
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=5, foldername ="Data")
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
require(ggtree)
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae', angle=315, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=45, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=245, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-45, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-5, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-15, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-20, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=70, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=120, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=50, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=20, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=8, hjust = "center", offset.text=13, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=9, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=8, hjust = "center", offset.text=9, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=355, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=8, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=13, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=8, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
plot(data$Status, data$res)
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetOK <- data[data$Status == "1",]
subsetDa <- data[data$Order == "Dasyuromorphia",]
subsetTR <- data[data$Status == "2",]
X <- "Brain"
Y <- "BodyN"
FR <- "Status"
dat <-data[,c(which(colnames(data)==Y),which(colnames(data)==X), which(colnames(data)==FR) ),drop=F]
colnames(dat)<-c("Dependent","Independent", "Factor" )
dat$Dependent <- as.numeric (dat$Dependent)
dat$Independent <- as.numeric (dat$Independent)
dat$Factor <- as.factor (dat$Factor)
myColors <- brewer.pal(4,"Set1") # Pal value must be the same as factor levels
names(myColors) <- levels(dat$Factor)
colScale <- scale_colour_manual(name = "Status",values = myColors, labels=c("NT", "T"))
p <- ggplot(dat, aes(log(Dependent), log(Independent), colour = Factor)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
geom_jitter(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour="blue", shape = 3) + geom_smooth(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour = "black", method=lm, se=FALSE, linetype = "longdash")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
)
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN))) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN))) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
dev.off9)
dev.off())
dev.off()
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN))) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN))) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE)
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black") + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black") + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE, colour="black") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black") + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE, colour="black") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="red", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dotted")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black") + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE, colour="black") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="red", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dash")
p
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black") + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), method=lm, se=FALSE, colour="black") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="red", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
geom_jitter(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour="blue", shape = 3) + geom_smooth(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour = "black", method=lm, se=FALSE, linetype = "longdash") +
labs(x = "ln(Brain)", y = "ln(Body)")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
geom_jitter(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour="blue", shape = 3) + geom_smooth(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour = "black", method=lm, se=FALSE, linetype = "longdash") +
labs(x = "ln(Brain)", y = "ln(Body)")
+ theme(legend.position="right")
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
geom_jitter(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour="blue", shape = 3) + geom_smooth(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour = "black", method=lm, se=FALSE, linetype = "longdash") +
labs(x = "ln(Brain)", y = "ln(Body)")
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOZ$Brain), log(subsetOZ$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetAM$Brain), log(subsetAM$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
geom_jitter(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour="blue", shape = 3) + geom_smooth(aes(log(subsetNG$Brain), log(subsetNG$BodyN)), colour = "black", method=lm, se=FALSE, linetype = "longdash") +
labs(x = "ln(Brain)", y = "ln(Body)") + theme(legend.position = "right")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
labs(x = "ln(Brain), Red = NT, Blue = T", y = "ln(Body)")
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted")
labs(x = "ln(Brain), Red = NT, Blue = T", y = "ln(Body)")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="red", shape = 15) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour = "red", method=lm, se=FALSE, linetype = "dashed") +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dotted") +
labs(x = "ln(Brain), Red = NT, Blue = T", y = "ln(Body)")
p
p <- ggplot() +
theme_bw() +
geom_jitter(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour="black", shape = 15) + geom_smooth(aes(log(subsetOK$Brain), log(subsetOK$BodyN)), colour = "black", method=lm, se=FALSE) +
geom_jitter(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour="blue", shape = 17) + geom_smooth(aes(log(subsetTR$Brain), log(subsetTR$BodyN)), colour = "blue", method=lm, se=FALSE, linetype = "dashed") +
labs(x = "ln(Brain), Red = NT, Blue = T", y = "ln(Body)")
p
#Status model - extinct are largest brained
model.pglsN3<-pgls(log(Brain) ~ log(BodyN)*Status, data = mars, lambda='ML')
#Status model - extinct are largest brained
model.pglsN3<-pgls(log(Brain) ~ log(BodyN)*Status, data = mars, lambda='ML')
summary(model.pglsN3)
model.pglsN3<-pgls(log(Brain) ~ log(BodyN) + Status, data = mars, lambda='ML')
summary(model.pglsN3)
model.pglsN3<-pgls(log(Brain) ~ log(BodyN)*Status, data = mars, lambda='ML')
summary(model.pglsN3)
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree, layout="tree") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree, layout="scattergram") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree) +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
treeDi <- ggtree(tree, layout="circular") +
geom_hilight(node=137, fill="firebrick2", alpha=.6) +
geom_hilight(node=108, fill="limegreen", alpha=.6) +
geom_hilight(node=87, fill="firebrick2", alpha=.6)
treeDi + geom_cladelabel(137, 'Acrobatidae + Pseudocheiridae +', angle=-25, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5) +
geom_cladelabel(108, 'Macropodidae', angle=5, hjust = "center", offset.text=5, barsize=3.5, color = 'darkgreen', offset = 2.5, fontsize = 5) +
geom_cladelabel(87, 'Potoroidae', angle=90, hjust = "center", offset.text=5, barsize=3.5, color='red4', offset = 2.5, fontsize = 5)
tree <-read.tree("./Data/tree176.nwk")
treeC <- ggtree(tree, layout="circular") +
geom_hilight(node=171, fill="firebrick2", alpha=.6) +
geom_hilight(node=163, fill="blue", alpha=.6) +
geom_hilight(node=126, fill="blue", alpha=.6) +
geom_hilight(node=95, fill="firebrick2", alpha=.6)
treeC
RR <- RRphylo(tree, data)
RR <- RRphylo(tree, data)
#Create comparative object
mars <- comparative.data(phy = tree, data = data, names.col = Names, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls.res <- pgls(log(Brain) ~ log(BodyN), data = mars, lambda='ML')
res<-residuals(model.pgls.res) #phylo=T exports phylo corrected residuals
res<- res/sqrt(var(res))[1] #standartize residuals
data <- cbind (data, res)
data1 <- as.data.frame(data$res)
rownames(data1) <- data$Names
RR <- RRphylo(tree, data1)
search.shift(RR, auto.recognize = "yes", test.single = "no", status.type= "clade", nrep =5000, f=5, foldername ="Data")
treeC <- ggtree(tree, layout="circular") +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
treeC <- ggtree(tree, layout="circular") + geom_tiplab() +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
treeC <- ggtree(tree, layout="circular") + geom_tiplab() + geom_nodepoint() +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
treeC <- ggtree(tree, ladderize=F, layout="circular") + geom_tiplab() + geom_nodepoint() +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
treeC <- ggtree(tree, ladderize=F, layout="circular")  +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
edge=data.frame(tree$edge, edge_num=1:nrow(tree$edge))
colnames(edge)=c("parent", "node", "edge_num")
treeC %<+% edge + geom_label(aes(x=branch, label=edge_num))
RR$rates
RR
plot(RR)
summary(RR)
plotRates(RR)
plotRates
plotRates(RR, 1)
plotRates(RR, 176)
plotRates(RR, 331)
a <- plotRates(RR, 331)
plotRates(RR, 331, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 313, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 313, 331, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 313 + 331, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 264, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 246, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 281, export.tiff =TRUE, foldername = "Data")
plotRates(RR, 178, export.tiff =TRUE, foldername = "Data")
treeC <- ggtree(tree, ladderize=F) + geom_tiplab() + geom_nodepoint() +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
treeC <- ggtree(tree, ladderize=T) + geom_tiplab() + geom_nodepoint() +
geom_hilight(node=331, fill="firebrick2", alpha=.6) +
geom_hilight(node=313, fill="blue", alpha=.6) +
geom_hilight(node=264, fill="blue", alpha=.6) +
geom_hilight(node=246, fill="blue", alpha=.6) +
geom_hilight(node=281, fill="firebrick2", alpha=.6) +
geom_hilight(node=178, fill="firebrick2", alpha=.6)
treeC
?Anova
Anova(model.pgls.res, Type = 'II')
#### P6. "Automated" model simplification  ####
# (i) allow the 'step' program to simplify the model for you
library(stats) # load the library that contains the "step" program
Anova(model.pgls.res, Type = 'II')
library(car)    # load the library that contains the "vif" command
Anova(model.pgls.res, Type = 'II')
stepModel <- step(model.pgls.res, direction="both")
stepModel <- step(model.pgls.res12, direction="both")
stepModel <- step(model.pgls4, direction="both")
View(model.pgls4)
model.pgls4
stepModel <- step(model.pgls4, direction="both")
stepModel <- step(model.pgls4$model, direction="both")
model.pgls4$aic
model.pgls4$aicc
treeC <- ggtree(tree, ladderize=F, layout="circular")
treeC
treeC <- ggtree(tree, ladderize=F)
treeC
